version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: comptia-backend-dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://admin:changeme@postgres:5432/comptia_network
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_secret_change_in_production
    volumes:
      - ./src:/app/src
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend-network
    restart: unless-stopped
    command: npm run dev

  postgres:
    image: postgres:14-alpine
    container_name: comptia-postgres
    environment:
      - POSTGRES_DB=comptia_network
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d comptia_network"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: comptia-redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    command: redis-server --appendonly yes

  adminer:
    image: adminer:latest
    container_name: comptia-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    networks:
      - backend-network
    restart: unless-stopped

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local

networks:
  backend-network:
    driver: bridge
