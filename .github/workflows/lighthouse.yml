name: Lighthouse Performance

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday

jobs:
  lighthouse:
    name: Run Lighthouse Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            http://localhost:5173
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Format lighthouse score
        id: lighthouse-score
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('lhci_reports/manifest.json', 'utf8'));
            const summary = results[0].summary;

            return {
              performance: Math.round(summary.performance * 100),
              accessibility: Math.round(summary.accessibility * 100),
              bestPractices: Math.round(summary['best-practices'] * 100),
              seo: Math.round(summary.seo * 100)
            };

      - name: Comment PR with Lighthouse results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const scores = ${{ steps.lighthouse-score.outputs.result }};
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Lighthouse Performance Report üö¶\n\n` +
                    `- ‚ö° Performance: ${scores.performance}/100\n` +
                    `- ‚ôø Accessibility: ${scores.accessibility}/100\n` +
                    `- ‚úÖ Best Practices: ${scores.bestPractices}/100\n` +
                    `- üîç SEO: ${scores.seo}/100`
            })
