name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build
        env:
          NODE_ENV: production

      - name: Optimize assets
        run: |
          # Compress JavaScript files
          find dist -name "*.js" -type f -exec gzip -k {} \;
          # Compress CSS files
          find dist -name "*.css" -type f -exec gzip -k {} \;
          # Compress HTML files
          find dist -name "*.html" -type f -exec gzip -k {} \;

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Notify deployment success
        run: |
          echo "Deployment successful!"
          echo "URL: ${{ steps.deployment.outputs.page_url }}"

  post-deploy:
    name: Post-Deployment Verification
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 30

      - name: Verify deployment
        run: |
          URL="${{ needs.deploy.outputs.page_url }}"
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" "$URL")
          if [ "$STATUS" -eq 200 ]; then
            echo "Deployment verified successfully!"
          else
            echo "Deployment verification failed with status: $STATUS"
            exit 1
          fi
        continue-on-error: true

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        continue-on-error: true
        with:
          urls: |
            ${{ needs.deploy.outputs.page_url }}
          uploadArtifacts: true
