import React from 'react';
import { createBrowserRouter, Navigate } from 'react-router-dom';
import { Layout } from './components/shared/Layout';
import { ErrorBoundary } from './components/shared/ErrorBoundary';

// Lazy load components for better performance
const Dashboard = React.lazy(() => import('./pages/Dashboard'));
const NotFound = React.lazy(() => import('./pages/NotFound'));

// OSI Model
const OSIIntroduction = React.lazy(() => import('./components/osi/Introduction'));
const OSIPractice = React.lazy(() => import('./components/osi/Practice'));

// Cloud
const CloudIntroduction = React.lazy(() => import('./components/cloud/Introduction'));
const CloudPractice = React.lazy(() => import('./components/cloud/Practice'));

// Protocols
const ProtocolsIntroduction = React.lazy(() => import('./components/protocols/Introduction'));
const ProtocolsPractice = React.lazy(() => import('./components/protocols/Practice'));

// Physical Media
const MediaIntroduction = React.lazy(() => import('./components/media/Introduction'));
const MediaPractice = React.lazy(() => import('./components/media/Practice'));

// Topologies
const TopologiesIntroduction = React.lazy(() => import('./components/topologies/Introduction'));
const TopologiesPractice = React.lazy(() => import('./components/topologies/Practice'));

// IPv4
const IPv4Introduction = React.lazy(() => import('./components/ipv4/Introduction'));
const IPv4Subnetting = React.lazy(() => import('./components/ipv4/SubnettingBasics'));
const IPv4Advanced = React.lazy(() => import('./components/ipv4/AdvancedSubnetting'));
const IPv4Practice = React.lazy(() => import('./components/ipv4/Practice'));

// Modern Topics
const ModernIntroduction = React.lazy(() => import('./components/modern/Introduction'));
const ModernPractice = React.lazy(() => import('./components/modern/Practice'));

// Assessment
const AssessmentIntroduction = React.lazy(() => import('./components/assessment/Introduction'));
const PracticeExam = React.lazy(() => import('./components/assessment/PracticeExam'));
const Flashcards = React.lazy(() => import('./components/assessment/Flashcards'));
const FinalExam = React.lazy(() => import('./components/assessment/FinalExam'));
const ResultsDashboard = React.lazy(() => import('./components/assessment/ResultsDashboard'));

// Loading component
const LoadingFallback = () => (
  <div className="flex items-center justify-center min-h-[60vh]">
    <div className="text-center">
      <div className="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 dark:border-blue-400"></div>
      <p className="mt-4 text-gray-600 dark:text-gray-400">Loading...</p>
    </div>
  </div>
);

export const router = createBrowserRouter([
  {
    path: '/',
    element: (
      <ErrorBoundary>
        <Layout />
      </ErrorBoundary>
    ),
    children: [
      {
        index: true,
        element: (
          <React.Suspense fallback={<LoadingFallback />}>
            <Dashboard />
          </React.Suspense>
        ),
      },
      // OSI Model routes
      {
        path: 'osi',
        children: [
          { index: true, element: <Navigate to="/osi/introduction" replace /> },
          {
            path: 'introduction',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <OSIIntroduction />
              </React.Suspense>
            ),
          },
          {
            path: 'practice',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <OSIPractice />
              </React.Suspense>
            ),
          },
        ],
      },
      // Cloud routes
      {
        path: 'cloud',
        children: [
          { index: true, element: <Navigate to="/cloud/introduction" replace /> },
          {
            path: 'introduction',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <CloudIntroduction />
              </React.Suspense>
            ),
          },
          {
            path: 'practice',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <CloudPractice />
              </React.Suspense>
            ),
          },
        ],
      },
      // Protocols routes
      {
        path: 'protocols',
        children: [
          { index: true, element: <Navigate to="/protocols/introduction" replace /> },
          {
            path: 'introduction',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <ProtocolsIntroduction />
              </React.Suspense>
            ),
          },
          {
            path: 'practice',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <ProtocolsPractice />
              </React.Suspense>
            ),
          },
        ],
      },
      // Physical Media routes
      {
        path: 'media',
        children: [
          { index: true, element: <Navigate to="/media/introduction" replace /> },
          {
            path: 'introduction',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <MediaIntroduction />
              </React.Suspense>
            ),
          },
          {
            path: 'practice',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <MediaPractice />
              </React.Suspense>
            ),
          },
        ],
      },
      // Topologies routes
      {
        path: 'topologies',
        children: [
          { index: true, element: <Navigate to="/topologies/introduction" replace /> },
          {
            path: 'introduction',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <TopologiesIntroduction />
              </React.Suspense>
            ),
          },
          {
            path: 'practice',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <TopologiesPractice />
              </React.Suspense>
            ),
          },
        ],
      },
      // IPv4 routes
      {
        path: 'ipv4',
        children: [
          { index: true, element: <Navigate to="/ipv4/introduction" replace /> },
          {
            path: 'introduction',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <IPv4Introduction />
              </React.Suspense>
            ),
          },
          {
            path: 'subnetting',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <IPv4Subnetting />
              </React.Suspense>
            ),
          },
          {
            path: 'advanced',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <IPv4Advanced />
              </React.Suspense>
            ),
          },
          {
            path: 'practice',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <IPv4Practice />
              </React.Suspense>
            ),
          },
        ],
      },
      // Modern Topics routes
      {
        path: 'modern',
        children: [
          { index: true, element: <Navigate to="/modern/introduction" replace /> },
          {
            path: 'introduction',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <ModernIntroduction />
              </React.Suspense>
            ),
          },
          {
            path: 'practice',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <ModernPractice />
              </React.Suspense>
            ),
          },
        ],
      },
      // Assessment routes
      {
        path: 'assessment',
        children: [
          { index: true, element: <Navigate to="/assessment/introduction" replace /> },
          {
            path: 'introduction',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <AssessmentIntroduction />
              </React.Suspense>
            ),
          },
          {
            path: 'practice',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <PracticeExam />
              </React.Suspense>
            ),
          },
          {
            path: 'flashcards',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <Flashcards />
              </React.Suspense>
            ),
          },
          {
            path: 'final',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <FinalExam />
              </React.Suspense>
            ),
          },
          {
            path: 'results',
            element: (
              <React.Suspense fallback={<LoadingFallback />}>
                <ResultsDashboard />
              </React.Suspense>
            ),
          },
        ],
      },
    ],
  },
  // 404 Not Found
  {
    path: '*',
    element: (
      <ErrorBoundary>
        <React.Suspense fallback={<LoadingFallback />}>
          <NotFound />
        </React.Suspense>
      </ErrorBoundary>
    ),
  },
]);
